definitions:
  cloudevent.CloudEvent-encoding_json_RawMessage:
    properties:
      data:
        description: Data contains domain-specific information about the event.
        items:
          type: integer
        type: array
      datacontenttype:
        description: |-
          DataContentType is an optional MIME type for the data field. We almost
          always serialize to JSON and in that case this field is implicitly
          "application/json".
        type: string
      dataschema:
        description: DataSchema is an optional URI pointing to a schema for the data
          field.
        type: string
      dataversion:
        description: DataVersion is the version of the data type.
        type: string
      id:
        description: |-
          ID is an identifier for the event. The combination of ID and Source must
          be unique.
        type: string
      producer:
        description: Producer is a specific instance, process or device that creates
          the data structure describing the CloudEvent.
        type: string
      source:
        description: Source is the context in which the event happened. In a distributed
          system it might consist of multiple Producers.
        type: string
      specversion:
        description: |-
          SpecVersion is the version of CloudEvents specification used.
          This is always hardcoded "1.0".
        type: string
      subject:
        description: |-
          Subject is an optional field identifying the subject of the event within
          the context of the event producer. In practice, we always set this.
        type: string
      time:
        description: |-
          Time is an optional field giving the time at which the event occurred. In
          practice, we always set this.
        type: string
      type:
        description: |-
          Type describes the type of event. It should generally be a reverse-DNS
          name.
        type: string
    type: object
  internal_app.codeResp:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
info:
  contact: {}
  description: This is the API documentation for the Odometer Attester service
  title: Odometer Attester API
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of server.
      tags:
      - root
  /vehicle/odometer/{tokenId}:
    get:
      consumes:
      - application/json
      description: Get the odometer reading for a specific vehicle by token ID
      parameters:
      - description: Vehicle Token ID
        in: path
        name: tokenId
        required: true
        type: string
      - description: Upload attestation DIS
        in: query
        name: upload
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cloudevent.CloudEvent-encoding_json_RawMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_app.codeResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_app.codeResp'
      summary: Get vehicle odometer reading
      tags:
      - vehicle
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
